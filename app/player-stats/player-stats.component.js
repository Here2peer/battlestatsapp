"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var player_stats_service_1 = require("./player-stats.service");
var player_service_1 = require("../player-services/player.service");
var router_1 = require("@angular/router");
var PlayerStatsComponent = /** @class */ (function () {
    function PlayerStatsComponent(playerStatsService, playerService, route) {
        this.playerStatsService = playerStatsService;
        this.playerService = playerService;
        this.route = route;
        this.unsortedData = new Array;
    }
    PlayerStatsComponent.prototype.ngOnInit = function () {
        this.getPlayerData();
    };
    PlayerStatsComponent.prototype.getPlayerData = function () {
        var _this = this;
        var player_name = 'Joltz';
        this.route.params.subscribe(function (params) {
            console.log(params);
            if (params['id'] === undefined) {
                player_name = 'Joltz';
            }
            else {
                player_name = params['id'];
            }
        });
        this.playerService.getPlayer(player_name, false).subscribe(function (data) {
            _this.playerData = data['data'][0];
            _this.attribute = _this.playerData['attributes'];
            _this.stats = _this.attribute['stats'];
            _this.customstats = _this.attribute['customstats'];
            _this.links = data['links'];
            _this.meta = data['meta'];
            // this.sortedData = this.stats.slice();
            for (var _i = 0, _a = _this.gitMapping; _i < _a.length; _i++) {
                _this.filteredMapping = _a[_i];
                if (_this.filteredMapping.StackableId > 11000 && _this.filteredMapping.StackableId < 12000) {
                    if (_this.filteredMapping.EnglishLocalizedName === undefined) {
                        _this.filteredMapping.EnglishLocalizedName = 0;
                    }
                    if (_this.stats[_this.filteredMapping.StackableId + 5000] === undefined) {
                        _this.stats[_this.filteredMapping.StackableId + 5000] = 0;
                    }
                    if (_this.stats[_this.filteredMapping.StackableId + 6000] === undefined) {
                        _this.stats[_this.filteredMapping.StackableId + 6000] = 0;
                    }
                    if (_this.stats[_this.filteredMapping.StackableId + 7000] === undefined) {
                        _this.stats[_this.filteredMapping.StackableId + 7000] = 0;
                    }
                    if (_this.stats[_this.filteredMapping.StackableId + 8000] === undefined) {
                        _this.stats[_this.filteredMapping.StackableId + 8000] = 0;
                    }
                    if (_this.stats[_this.filteredMapping.StackableId + 9000] === undefined) {
                        _this.stats[_this.filteredMapping.StackableId + 9000] = 0;
                    }
                    if (_this.stats[_this.filteredMapping.StackableId + 10000] === undefined) {
                        _this.stats[_this.filteredMapping.StackableId + 10000] = 0;
                    }
                    if (_this.stats[_this.filteredMapping.StackableId + 11000] === undefined) {
                        _this.stats[_this.filteredMapping.StackableId + 11000] = 0;
                    }
                    if (_this.stats[_this.filteredMapping.StackableId + 12000] === undefined) {
                        _this.stats[_this.filteredMapping.StackableId + 12000] = 0;
                    }
                    if (_this.stats[_this.filteredMapping.StackableId + 13000] === undefined) {
                        _this.stats[_this.filteredMapping.StackableId + 13000] = 0;
                    }
                    if (_this.stats[_this.filteredMapping.StackableId + 14000] === undefined) {
                        _this.stats[_this.filteredMapping.StackableId + 14000] = 0;
                    }
                    if (_this.stats[_this.filteredMapping.StackableId + 15000] === undefined) {
                        _this.stats[_this.filteredMapping.StackableId + 15000] = 0;
                    }
                    if (_this.stats[_this.filteredMapping.StackableId + 16000] === undefined) {
                        _this.stats[_this.filteredMapping.StackableId + 16000] = 0;
                    }
                    if (_this.stats[_this.filteredMapping.StackableId + 17000] === undefined) {
                        _this.stats[_this.filteredMapping.StackableId + 17000] = 0;
                    }
                    if (_this.stats[_this.filteredMapping.StackableId + 1000] === undefined) {
                        _this.stats[_this.filteredMapping.StackableId + 1000] = 0;
                    }
                    if (_this.stats[_this.filteredMapping.StackableId + 2000] === undefined) {
                        _this.stats[_this.filteredMapping.StackableId + 2000] = 0;
                    }
                    if (_this.stats[_this.filteredMapping.StackableId + 29000] === undefined) {
                        _this.stats[_this.filteredMapping.StackableId + 29000] = 0;
                    }
                    if (_this.stats[_this.filteredMapping.StackableId] === undefined) {
                        _this.stats[_this.filteredMapping.StackableId] = 0;
                    }
                    var hours = _this.convertTime(_this.stats[_this.filteredMapping.StackableId + 5000]);
                    _this.unsortedData.push({
                        name: _this.filteredMapping.EnglishLocalizedName,
                        time: hours,
                        rwins2: _this.stats[_this.filteredMapping.StackableId + 6000],
                        rloss2: _this.stats[_this.filteredMapping.StackableId + 7000],
                        rwins3: _this.stats[_this.filteredMapping.StackableId + 8000],
                        rloss3: _this.stats[_this.filteredMapping.StackableId + 9000],
                        uwins2: _this.stats[_this.filteredMapping.StackableId + 10000],
                        uloss2: _this.stats[_this.filteredMapping.StackableId + 11000],
                        uwins3: _this.stats[_this.filteredMapping.StackableId + 12000],
                        uloss3: _this.stats[_this.filteredMapping.StackableId + 13000],
                        bwins: _this.stats[_this.filteredMapping.StackableId + 14000],
                        bloss: _this.stats[_this.filteredMapping.StackableId + 15000],
                        bgwins: _this.stats[_this.filteredMapping.StackableId + 16000],
                        bgloss: _this.stats[_this.filteredMapping.StackableId + 17000],
                        twins: _this.stats[_this.filteredMapping.StackableId + 1000],
                        tloss: _this.stats[_this.filteredMapping.StackableId + 2000],
                        level: _this.stats[_this.filteredMapping.StackableId + 29000],
                        xp: _this.stats[_this.filteredMapping.StackableId],
                        icon: _this.filteredMapping.Icon
                    });
                }
            }
            _this.sortedData = _this.unsortedData.slice();
        });
        this.playerStatsService.getStatsMapping().subscribe(function (data) {
            // console.log(data);
            _this.statsMapping = data;
        });
        this.playerStatsService.getGitMapping().subscribe(function (data) {
            _this.gitMapping = data.Mappings;
        });
    };
    PlayerStatsComponent.prototype.convertTime = function (seconds) {
        console.log(seconds);
        var minutes = seconds / 60;
        console.log(minutes);
        var hours = minutes / 60;
        console.log(hours);
        return Math.ceil(hours);
    };
    PlayerStatsComponent.prototype.sortData = function (sort) {
        var data = this.sortedData.slice();
        if (!sort.active || sort.direction === '') {
            this.sortedData = data;
            return;
        }
        this.sortedData = data.sort(function (a, b) {
            var isAsc = sort.direction === 'asc';
            switch (sort.active) {
                case 'Champion': return compare(a.name, b.name, isAsc);
                case 'Time Played': return compare(a.time, b.time, isAsc);
                case 'Wins': return compare(a.time, b.time, isAsc);
                case 'Losses': return compare(a.time, b.time, isAsc);
                case 'Ranked 2v2 wins': return compare(+a.rwins2, +b.rwins2, isAsc);
                case 'Ranked 2v2 losses': return compare(+a.rloss2, +b.rloss2, isAsc);
                case 'Ranked 3v3 wins': return compare(+a.rwins3, +b.rwins3, isAsc);
                case 'Ranked 3v3 losses': return compare(+a.rloss3, +b.rloss3, isAsc);
                case 'Unranked 2v2 wins': return compare(+a.uwins2, +b.uwins2, isAsc);
                case 'Unranked 2v2 losses': return compare(+a.uloss2, +b.uloss2, isAsc);
                case 'Unranked 3v3 wins': return compare(+a.uwins3, +b.uwins3, isAsc);
                case 'Unranked 3v3 losses': return compare(+a.uloss3, +b.uloss3, isAsc);
                case 'Brawl wins': return compare(+a.bwins, +b.bwins, isAsc);
                case 'Brawl losses': return compare(+a.bloss, +b.bloss, isAsc);
                case 'Battleground wins': return compare(+a.bgwins, +b.bgwins, isAsc);
                case 'Battleground losses': return compare(+a.bgloss, +b.bgloss, isAsc);
                default: return 0;
            }
        });
    };
    PlayerStatsComponent = __decorate([
        core_1.Component({
            selector: 'app-player-stats',
            templateUrl: './player-stats.component.html',
            styleUrls: ['./player-stats.component.css'],
            providers: [player_stats_service_1.PlayerStatsService, player_service_1.PlayerService]
        }),
        __metadata("design:paramtypes", [player_stats_service_1.PlayerStatsService,
            player_service_1.PlayerService,
            router_1.ActivatedRoute])
    ], PlayerStatsComponent);
    return PlayerStatsComponent;
}());
exports.PlayerStatsComponent = PlayerStatsComponent;
function compare(a, b, isAsc) {
    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);
}
//# sourceMappingURL=data:application/json;base64,